{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\OneDrive\\\\Desktop\\\\Mariano Crop Farm Frontend\\\\marianocropfarmbot\\\\src\\\\Screens\\\\Daily.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { selectUser } from '../features/userSlice';\nimport { doc, getDoc, serverTimestamp, Timestamp, updateDoc } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport daily from \"../assets/daily.png\";\nimport { setShowMessage } from '../features/messageSlice';\nimport { setCoinShow } from '../features/coinShowSice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Daily = () => {\n  _s();\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const [claimAmount, setClaimAmount] = useState(10);\n  const [claimDay, setClaimDay] = useState(1);\n  const [isClaimed, setIsClaimed] = useState(false);\n  const [claimDisabled, setClaimDisabled] = useState(false);\n  const formatNumber = num => {\n    let numStr = num.toFixed(3);\n    let [intPart, decPart] = numStr.split(\".\");\n    intPart = intPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    if (num < 0.01) {\n      return `${intPart},${decPart}`;\n    }\n    decPart = decPart.slice(0, 2);\n    return `${intPart},${decPart}`;\n  };\n  const calculateClaimAmount = useCallback(async () => {\n    var _user$daily;\n    if (user !== null && user !== void 0 && (_user$daily = user.daily) !== null && _user$daily !== void 0 && _user$daily.claimedTime) {\n      const lastClaimTime = user.daily.claimedTime instanceof Timestamp ? user.daily.claimedTime.toDate() : new Date(user.daily.claimedTime);\n      const now = Timestamp.now().toDate();\n      const hourDiff = (now - lastClaimTime) / (1000 * 3600);\n      if (hourDiff < 24) {\n        setIsClaimed(true);\n        setClaimDay(user.daily.claimedDay);\n      } else if (hourDiff >= 48) {\n        if (!claimDisabled) {\n          dispatch(setShowMessage({\n            message: \"You skipped one day\",\n            color: \"red\"\n          }));\n        }\n        setIsClaimed(false);\n        setClaimDay(1);\n        setClaimAmount(10);\n      } else {\n        setIsClaimed(false);\n        const newDay = user.daily.claimedDay + 1;\n        setClaimDay(newDay);\n        if (newDay <= 10) {\n          setClaimAmount(10 * Math.pow(2, newDay - 1));\n        } else {\n          setClaimAmount(10000);\n        }\n      }\n    }\n  }, [user, dispatch, claimDisabled]);\n  const handleClaim = async () => {\n    try {\n      var _user$daily2;\n      setClaimDisabled(true);\n      dispatch(setShowMessage({\n        message: \"Claiming daily rewards...\",\n        color: \"green\"\n      }));\n      const getServerTime = async (db, userId) => {\n        await updateDoc(doc(db, \"users\", userId), {\n          time: serverTimestamp()\n        });\n        const checkTime = async () => {\n          var _docSnap$data;\n          const docSnap = await getDoc(doc(db, \"users\", userId));\n          const serverTime = (_docSnap$data = docSnap.data()) === null || _docSnap$data === void 0 ? void 0 : _docSnap$data.time;\n          if (serverTime) {\n            return serverTime;\n          } else {\n            return new Promise(resolve => {\n              setTimeout(() => resolve(checkTime()), 1000);\n            });\n          }\n        };\n        return checkTime();\n      };\n\n      //usage\n      const serverNow = await getServerTime(db, user.uid);\n      const lastClaimTime = user.daily.claimedTime instanceof Timestamp ? user.daily.claimedTime.toDate() : new Date(user.daily.claimedTime);\n      const now = selectUser.toDate();\n      const hourDiff = (now - lastClaimTime) / (1000 * 3600);\n      if (!(user !== null && user !== void 0 && (_user$daily2 = user.daily) !== null && _user$daily2 !== void 0 && _user$daily2.claimedTime) || hourDiff >= 24) {\n        var _user$daily3;\n        let claimAmountX = claimAmount;\n        let claimDayX = claimDay;\n        if (user !== null && user !== void 0 && (_user$daily3 = user.daily) !== null && _user$daily3 !== void 0 && _user$daily3.claimedTime && hourDiff >= 48) {\n          setClaimDay(1);\n          setClaimAmount(10);\n          claimAmountX = 10;\n          claimDayX = 1;\n          dispatch(setShowMessage({\n            message: \"Claim day has been reset\",\n            color: \"red\"\n          }));\n        }\n        setIsClaimed(true);\n        dispatch(setCoinShow(true));\n        const userRef = doc(db, \"users\", user.uid);\n        await updateDoc(userRef, {\n          balance: user.balance + claimAmountX,\n          daily: {\n            claimedTime: serverTimestamp(),\n            claimedDay: claimDayX\n          }\n        });\n        setClaimDisabled(false);\n      } else {\n        dispatch(setShowMessage({\n          message: \"Error. Please try again!\",\n          color: \"red\"\n        }));\n      }\n    } catch (error) {\n      console.error(\"Error claiming daily reward:\", error);\n      setIsClaimed(false);\n      dispatch(setShowMessage({\n        message: \"Error. Please try again!\",\n        color: \"red\"\n      }));\n      dispatch(setCoinShow(false));\n      setClaimDisabled(false);\n    }\n  };\n  useEffect(() => {\n    calculateClaimAmount();\n  }, [calculateClaimAmount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center py-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded-full p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"w-28 h-28 object-contain\",\n          src: daily,\n          alt: \"M\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center font-bold text-3xl\",\n      children: \"Daily rewards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-lg mt-2\",\n      children: \"Here you can claim your rewards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-xl font-bold mt-4\",\n      children: [\"(Day \", claimDay, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-10 mt-20\",\n      children: isClaimed ? /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        className: \"w-full bg-gray-500 text-white font-bold py-2 px-4 rounded cursor-not-allowed\",\n        children: \"Claimed for today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: disabled,\n        onClick: handleClaim,\n        className: `w-fulll ${claimDisabled ? \"bg-gray-500\" : \"bg-blue-500 hover:bg-bue-700\"} text-white font-bold py-2 px-4 rounded`,\n        children: [\"Claim \\uD83C\\uDF3F\", formatNumber(claimAmount)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s(Daily, \"3Gt5dRVbIm7QNxKiiKoa+M4b4Rc=\", true, function () {\n  return [useDispatch];\n});\n_c = Daily;\nexport default Daily;\nvar _c;\n$RefreshReg$(_c, \"Daily\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useDispatch","selectUser","doc","getDoc","serverTimestamp","Timestamp","updateDoc","db","daily","setShowMessage","setCoinShow","jsxDEV","_jsxDEV","Daily","_s","dispatch","user","useSelector","claimAmount","setClaimAmount","claimDay","setClaimDay","isClaimed","setIsClaimed","claimDisabled","setClaimDisabled","formatNumber","num","numStr","toFixed","intPart","decPart","split","replace","slice","calculateClaimAmount","_user$daily","claimedTime","lastClaimTime","toDate","Date","now","hourDiff","claimedDay","message","color","newDay","Math","pow","handleClaim","_user$daily2","getServerTime","userId","time","checkTime","_docSnap$data","docSnap","serverTime","data","Promise","resolve","setTimeout","serverNow","uid","_user$daily3","claimAmountX","claimDayX","userRef","balance","error","console","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Samsung/OneDrive/Desktop/Mariano Crop Farm Frontend/marianocropfarmbot/src/Screens/Daily.js"],"sourcesContent":["import React, {useState, useEffect, useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { selectUser } from '../features/userSlice';\r\nimport {\r\n  doc,\r\n  getDoc,\r\n  serverTimestamp,\r\n  Timestamp,\r\n  updateDoc\r\n} from \"firebase/firestore\";\r\nimport { db } from \"../firebase\";\r\nimport daily from \"../assets/daily.png\";\r\nimport { setShowMessage } from '../features/messageSlice';\r\nimport { setCoinShow } from '../features/coinShowSice';\r\n\r\nconst Daily = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector(selectUser);\r\n  const [claimAmount, setClaimAmount] = useState(10);\r\n  const [claimDay, setClaimDay] = useState(1);\r\n  const [isClaimed, setIsClaimed] = useState(false);\r\n  const [claimDisabled, setClaimDisabled] = useState(false);\r\n\r\n  const formatNumber = (num) => {\r\n    let numStr = num.toFixed(3);\r\n\r\n    let [intPart, decPart] = numStr.split(\".\");\r\n\r\n    intPart = intPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n\r\n    if (num < 0.01) {\r\n      return `${intPart},${decPart}`;\r\n    }\r\n\r\n    decPart = decPart.slice(0, 2);\r\n\r\n    return `${intPart},${decPart}`;\r\n  };\r\n\r\n  const calculateClaimAmount = useCallback(async () => {\r\n    if (user?.daily?.claimedTime) {\r\n      const lastClaimTime = user.daily.claimedTime instanceof Timestamp\r\n        ? user.daily.claimedTime.toDate()\r\n        : new Date(user.daily.claimedTime);\r\n      const now = Timestamp.now().toDate();\r\n      const hourDiff = (now - lastClaimTime) / (1000 * 3600);\r\n\r\n      if (hourDiff < 24) {\r\n        setIsClaimed(true);\r\n        setClaimDay(user.daily.claimedDay);\r\n      } else if (hourDiff >= 48) {\r\n        if (!claimDisabled) {\r\n          dispatch(\r\n            setShowMessage({\r\n              message: \"You skipped one day\",\r\n              color: \"red\",\r\n            })\r\n          );\r\n        }\r\n        setIsClaimed(false);\r\n        setClaimDay(1);\r\n        setClaimAmount(10);\r\n      } else {\r\n        setIsClaimed(false);\r\n        const newDay = user.daily.claimedDay + 1;\r\n        setClaimDay(newDay);\r\n        if (newDay <= 10) {\r\n          setClaimAmount(10 * Math.pow(2, newDay - 1));\r\n        } else {\r\n          setClaimAmount(10000);\r\n        }\r\n      }\r\n    }\r\n  }, [user, dispatch, claimDisabled]);\r\n\r\n  const handleClaim = async () => {\r\n    try {\r\n      setClaimDisabled(true);\r\n      dispatch(\r\n        setShowMessage({\r\n          message: \"Claiming daily rewards...\",\r\n          color: \"green\",\r\n        })\r\n      );\r\n      const getServerTime = async (db, userId) => {\r\n        await updateDoc(doc(db, \"users\", userId), {\r\n          time: serverTimestamp(),\r\n        });\r\n\r\n        const checkTime = async () => {\r\n          const docSnap = await getDoc(doc(db, \"users\", userId));\r\n          const serverTime = docSnap.data()?.time;\r\n\r\n          if (serverTime) {\r\n            return serverTime;\r\n          } else {\r\n            return new Promise((resolve) => {\r\n              setTimeout(() => resolve(checkTime()), 1000);\r\n            });\r\n          }\r\n        };\r\n\r\n        return checkTime();\r\n      };\r\n\r\n      //usage\r\n      const serverNow = await getServerTime(db, user.uid);\r\n\r\n      const lastClaimTime =\r\n      user.daily.claimedTime instanceof Timestamp\r\n        ? user.daily.claimedTime.toDate()\r\n        : new Date(user.daily.claimedTime);\r\n      const now = selectUser.toDate();\r\n      const hourDiff = (now - lastClaimTime) / (1000 * 3600);\r\n\r\n      if (!user?.daily?.claimedTime || hourDiff >= 24) {\r\n        let claimAmountX = claimAmount;\r\n        let claimDayX = claimDay;\r\n        if (user?.daily?.claimedTime && hourDiff >= 48) {\r\n          setClaimDay(1);\r\n          setClaimAmount(10);\r\n          claimAmountX = 10;\r\n          claimDayX = 1;\r\n          dispatch(\r\n            setShowMessage({\r\n              message: \"Claim day has been reset\",\r\n              color: \"red\"\r\n            })\r\n          );\r\n        }\r\n        setIsClaimed(true);\r\n        dispatch(setCoinShow(true));\r\n\r\n        const userRef = doc(db, \"users\", user.uid);\r\n        await updateDoc(userRef, {\r\n          balance: user.balance+ claimAmountX,\r\n          daily: {\r\n            claimedTime: serverTimestamp(),\r\n            claimedDay: claimDayX,\r\n          },\r\n        });\r\n        setClaimDisabled(false);\r\n      } else {\r\n        dispatch(\r\n          setShowMessage({\r\n            message: \"Error. Please try again!\",\r\n            color: \"red\",\r\n          })\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error claiming daily reward:\", error);\r\n      setIsClaimed(false);\r\n      dispatch(\r\n        setShowMessage({\r\n          message: \"Error. Please try again!\",\r\n          color: \"red\",\r\n        })\r\n      );\r\n      dispatch(setCoinShow(false));\r\n      setClaimDisabled(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    calculateClaimAmount();\r\n  }, [calculateClaimAmount]);\r\n\r\n  return (\r\n    <div className='text-white'>\r\n      <div className='flex items-center justify-center py-10'>\r\n        <div className=\"rounded-full p-4\">\r\n          <img className='w-28 h-28 object-contain' src={daily} alt='M' />\r\n        </div>\r\n      </div>\r\n      <p className='text-center font-bold text-3xl'>Daily rewards</p>\r\n      <p className='text-center text-lg mt-2'>\r\n        Here you can claim your rewards\r\n      </p>\r\n      <p className='text-center text-xl font-bold mt-4'>(Day {claimDay})</p>\r\n      <div className='mx-10 mt-20'>\r\n        {isClaimed ? (\r\n          <button\r\n            disabled\r\n            className='w-full bg-gray-500 text-white font-bold py-2 px-4 rounded cursor-not-allowed'\r\n          >\r\n            Claimed for today\r\n          </button>\r\n        ) : (\r\n          <button\r\n            disabled={disabled}\r\n            onClick={handleClaim}\r\n            className={`w-fulll ${ claimDisabled ? \"bg-gray-500\" : \"bg-blue-500 hover:bg-bue-700\"  \r\n            } text-white font-bold py-2 px-4 rounded`}\r\n          >\r\n            Claim 🌿{formatNumber(claimAmount)}\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Daily;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}