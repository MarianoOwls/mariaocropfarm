{"ast":null,"code":"import React from 'react';\nimport { setDoc, doc } from 'firebase/firestore';\nimport { db } from '../firebase';\nasync function GenerateTopUsers(numberOfUsers) {\n  function UserAvatar(index) {\n    return `https://randomuser.me/api/portraits/men/${index % 100}.jpg`;\n  }\n  async function generateRandomUser() {\n    try {\n      const response = await fetch(\"https://randomuser.me/api/?gender=male&inc=name,login\");\n      const data = await response.json();\n      const {\n        first,\n        last\n      } = data.results[0].name;\n      const {\n        username\n      } = data.results[0].login;\n      return {\n        firstName: first,\n        lastName: last,\n        username: username\n      };\n    } catch (error) {\n      console.error(\"Error fetching random user:\", error);\n      return {\n        firstName: \"Joe\",\n        lastName: \"Kambele\",\n        username: \"joeKambele\"\n      };\n    }\n  }\n  function generateRandomNumber() {\n    return Math.floor(Math.random() * (2000000 - 1000000 + 1)) + 1000000;\n  }\n  for (let i = 0; i < numberOfUsers; i++) {\n    const {\n      firstName,\n      lastName,\n      username\n    } = await generateRandomUser();\n    const randomNum = generateRandomNumber();\n    const randomID = `top_${generateRandomNumber()}`;\n    await setDoc(doc(db, \"users\", randomID), {\n      userImage: UserAvatar(randomNum),\n      firstName,\n      lastName,\n      username,\n      languageCode: \"en\",\n      referrals: null,\n      referredBy: null,\n      isPremium: false,\n      balance: randomNum,\n      mineRate: 0.001,\n      isMining: false,\n      miningStartedTime: null,\n      daily: {\n        claimTime: null,\n        claimedDay: 0\n      },\n      links: null\n    });\n    console.log(`User ${i + 1} generated and saved`);\n  }\n  console.log(`${numberOfUsers} users generated and saved to Database`);\n}\n_c = GenerateTopUsers;\nexport default GenerateTopUsers;\nvar _c;\n$RefreshReg$(_c, \"GenerateTopUsers\");","map":{"version":3,"names":["React","setDoc","doc","db","GenerateTopUsers","numberOfUsers","UserAvatar","index","generateRandomUser","response","fetch","data","json","first","last","results","name","username","login","firstName","lastName","error","console","generateRandomNumber","Math","floor","random","i","randomNum","randomID","userImage","languageCode","referrals","referredBy","isPremium","balance","mineRate","isMining","miningStartedTime","daily","claimTime","claimedDay","links","log","_c","$RefreshReg$"],"sources":["C:/Users/Samsung/OneDrive/Desktop/Mariano Crop Farm Frontend/marianocropfarmbot/src/components/GenerateTopUsers.js"],"sourcesContent":["import React from 'react';\r\nimport { setDoc, doc } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\n\r\nasync function GenerateTopUsers(numberOfUsers) {\r\n    function UserAvatar(index) {\r\n        return `https://randomuser.me/api/portraits/men/${index % 100}.jpg`;\r\n    }\r\n\r\n    async function generateRandomUser() {\r\n        try {\r\n            const response = await fetch(\r\n                \"https://randomuser.me/api/?gender=male&inc=name,login\"\r\n            );\r\n            const data = await response.json();\r\n            const { first, last } = data.results[0].name;\r\n            const { username } = data.results[0].login;\r\n            return { firstName: first, lastName: last, username: username}\r\n        } catch (error) {\r\n            console.error(\"Error fetching random user:\", error);\r\n            return { firstName: \"Joe\", lastName: \"Kambele\", username: \"joeKambele\"};\r\n        }\r\n    }\r\n\r\n    function generateRandomNumber () {\r\n        return Math.floor(Math.random() * (2000000 - 1000000 + 1)) + 1000000;\r\n    }\r\n\r\n    for (let i = 0; i < numberOfUsers; i++) {\r\n        const { firstName, lastName, username } = await generateRandomUser();\r\n        const randomNum = generateRandomNumber();\r\n        const randomID = `top_${generateRandomNumber()}`;\r\n\r\n        await setDoc(doc(db, \"users\", randomID), {\r\n            userImage: UserAvatar(randomNum),\r\n            firstName,\r\n            lastName,\r\n            username,\r\n            languageCode: \"en\",\r\n            referrals: null,\r\n            referredBy: null,\r\n            isPremium: false,\r\n            balance: randomNum,\r\n            mineRate: 0.001,\r\n            isMining: false,\r\n            miningStartedTime: null,\r\n            daily: {\r\n                claimTime: null,\r\n                claimedDay: 0,\r\n            },\r\n            links: null,\r\n        });\r\n\r\n        console.log(`User ${i + 1} generated and saved`);\r\n    }\r\n\r\n    console.log(`${numberOfUsers} users generated and saved to Database`);\r\n  \r\n}\r\n\r\nexport default GenerateTopUsers"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,GAAG,QAAQ,oBAAoB;AAChD,SAASC,EAAE,QAAQ,aAAa;AAEhC,eAAeC,gBAAgBA,CAACC,aAAa,EAAE;EAC3C,SAASC,UAAUA,CAACC,KAAK,EAAE;IACvB,OAAO,2CAA2CA,KAAK,GAAG,GAAG,MAAM;EACvE;EAEA,eAAeC,kBAAkBA,CAAA,EAAG;IAChC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,uDACJ,CAAC;MACD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,MAAM;QAAEC,KAAK;QAAEC;MAAK,CAAC,GAAGH,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;MAC5C,MAAM;QAAEC;MAAS,CAAC,GAAGN,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC,CAACG,KAAK;MAC1C,OAAO;QAAEC,SAAS,EAAEN,KAAK;QAAEO,QAAQ,EAAEN,IAAI;QAAEG,QAAQ,EAAEA;MAAQ,CAAC;IAClE,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,OAAO;QAAEF,SAAS,EAAE,KAAK;QAAEC,QAAQ,EAAE,SAAS;QAAEH,QAAQ,EAAE;MAAY,CAAC;IAC3E;EACJ;EAEA,SAASM,oBAAoBA,CAAA,EAAI;IAC7B,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAI,OAAO,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO;EACxE;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGtB,aAAa,EAAEsB,CAAC,EAAE,EAAE;IACpC,MAAM;MAAER,SAAS;MAAEC,QAAQ;MAAEH;IAAS,CAAC,GAAG,MAAMT,kBAAkB,CAAC,CAAC;IACpE,MAAMoB,SAAS,GAAGL,oBAAoB,CAAC,CAAC;IACxC,MAAMM,QAAQ,GAAG,OAAON,oBAAoB,CAAC,CAAC,EAAE;IAEhD,MAAMtB,MAAM,CAACC,GAAG,CAACC,EAAE,EAAE,OAAO,EAAE0B,QAAQ,CAAC,EAAE;MACrCC,SAAS,EAAExB,UAAU,CAACsB,SAAS,CAAC;MAChCT,SAAS;MACTC,QAAQ;MACRH,QAAQ;MACRc,YAAY,EAAE,IAAI;MAClBC,SAAS,EAAE,IAAI;MACfC,UAAU,EAAE,IAAI;MAChBC,SAAS,EAAE,KAAK;MAChBC,OAAO,EAAEP,SAAS;MAClBQ,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,KAAK;MACfC,iBAAiB,EAAE,IAAI;MACvBC,KAAK,EAAE;QACHC,SAAS,EAAE,IAAI;QACfC,UAAU,EAAE;MAChB,CAAC;MACDC,KAAK,EAAE;IACX,CAAC,CAAC;IAEFpB,OAAO,CAACqB,GAAG,CAAC,QAAQhB,CAAC,GAAG,CAAC,sBAAsB,CAAC;EACpD;EAEAL,OAAO,CAACqB,GAAG,CAAC,GAAGtC,aAAa,wCAAwC,CAAC;AAEzE;AAACuC,EAAA,GAtDcxC,gBAAgB;AAwD/B,eAAeA,gBAAgB;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}