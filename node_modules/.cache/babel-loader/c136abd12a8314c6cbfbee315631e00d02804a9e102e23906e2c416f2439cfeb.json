{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\OneDrive\\\\Desktop\\\\Mariano Crop Farm Frontend\\\\marianocropfarmbot\\\\src\\\\components\\\\MiningButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { selectUser } from \"../features/userSlice\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { doc, getDoc, serverTimestamp, setDoc, updateDoc } from \"firebase/firestore\";\nimport { db } from '../firebase';\nimport { selectCalculated } from \"../features/calculateSlice\";\nimport { setShowMessage } from \"../features/messageSlice\";\nimport { selectCoinShow, setCoinShow } from \"../features/coinShowSice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MiningButton = () => {\n  _s();\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const calculate = useSelector(selectCalculated);\n  const [showUpgrade, setShowUpgrade] = useState(false);\n  const [claimDisabled, setClaimDisabled] = useState(false);\n  const MAX_MINE_RATE = 100.0;\n  const calculateMinedValue = (miningStartedTime, mineRate) => {\n    if (!miningStartedTime || !mineRate) return 0;\n    const now = Date.now();\n    const totalMiningTime = 6 * 60 * 60 * 1000;\n    let elapsedTime = now - miningStartedTime;\n    elapsedTime = Math.round(elapsedTime / 1000) * 1000;\n    if (elapsedTime >= totalMiningTime) {\n      // Mining completed, return possible minned value\n      return mineRate * (totalMiningTime / 1000);\n    }\n\n    // calculate mined value based on elapsed time\n    const minedValue = mineRate * (elapsedTime / 1000);\n\n    // Ronded to 3 decimal places to avoid floating point issues\n    return Math.round(minedValue * 1000) / 1000;\n  };\n  const startFarming = async () => {\n    try {\n      dispatch(setShowMessage({\n        message: \"Mining is starting...\",\n        color: 'green'\n      }));\n      await updateDoc(doc(db, \"users\", user.uid), {\n        isMining: true,\n        miningStartedTime: serverTimestamp()\n      });\n    } catch (error) {\n      console.log(\"Error starting farming:\", error);\n      dispatch(setShowMessage({\n        message: \"Error. Please try again\",\n        color: 'red'\n      }));\n    }\n  };\n  const claimRewards = async () => {\n    try {\n      dispatch(setShowMessage({\n        message: \"Claiming coins in progress...\",\n        color: \"yellow\"\n      }));\n      setClaimDisabled(true);\n      // Get the current server times\n      const getServerTime = async (db, userId) => {\n        await updateDoc(doc(db, 'users', userId), {\n          time: serverTimestamp()\n        });\n        const checkTime = async () => {\n          var _docSnap$data;\n          const docSnap = await getDoc(doc(db, 'users', userId));\n          const serverTime = (_docSnap$data = docSnap.data()) === null || _docSnap$data === void 0 ? void 0 : _docSnap$data.time;\n          if (serverTime) {\n            return serverTime;\n          } else {\n            return new Promise(resolve => {\n              setTimeout(() => resolve(checkTime()), 1000);\n            });\n          }\n        };\n        return checkTime();\n      };\n\n      // Usage\n      const serverNow = await getServerTime(db, user.uid);\n\n      // calculate the time different in miliseconds\n      const timeDifference = serverNow.toMillis() - user.miningStartedTime;\n\n      //check if 6 hr (21600000 miliseconds) have passed\n      if (timeDifference >= 21600000) {\n        dispatch(selectCoinShow(true));\n        const minedAmount = calculateMinedValue(user.miningStartedTime, user.mineRate, serverNow);\n        console.log(\"Mined Amount:\", minedAmount);\n        const newBalance = Number((user.balance + minedAmount).toFixed(2));\n        await updateDoc(doc(db, \"users\", user.uid), {\n          balance: newBalance,\n          isMining: false,\n          miningStartedTime: null\n        });\n        if (user.referredBy) {\n          const referralBonus = Number((minedAmount * 0.1).toFixed(2));\n          const referrerDoc = doc(db, \"users\", user.referredBy);\n          const referrerSnapshot = await getDoc(referrerDoc);\n          if (referrerSnapshot.exists()) {\n            const referrerBalance = referrerSnapshot.data().balance;\n            const referralAddedValue = referrerSnapshot.data().referrals[user.uid].addedValue;\n            const updatedBalance = Number((referrerBalance + referralBonus).toFixed(2));\n            const updatedAddedValue = Number((referralAddedValue + referralBonus).toFixed(2));\n            await setDoc(referrerDoc, {\n              referrals: {\n                [user.uid]: {\n                  addedValue: updatedAddedValue\n                }\n              },\n              balance: updatedBalance\n            }, {\n              merge: true\n            });\n          }\n        }\n        setClaimDisabled(false);\n      } else {\n        console.log(\"Not enough time has passed to claim reward\");\n        //optionally, you can show message \n        dispatch(setShowMessage({\n          message: \"Error. Please try again!\",\n          color: \"red\"\n        }));\n      }\n    } catch (error) {\n      console.error(\"Error claiming reward:\", error);\n      dispatch(setShowMessage({\n        message: \"Error. Please try again!\",\n        color: \"red\"\n      }));\n      dispatch(setCoinShow(false));\n      setClaimDisabled(false);\n    }\n  };\n  const upgradeMinerate = async () => {\n    try {\n      dispatch(setShowMessage({\n        message: \"Upgrading in progress...\",\n        color: \"blue\"\n      }));\n      const nextRate = Math.min(addPrecise(user.mineRate, getUpgradeStep(user.mineRate)), MAX_MINE_RATE);\n      const price = getUpgradePrice(getNextUpgradeRate());\n      const newBalance = Number((user.balance - price).toFixed(2));\n      setShowUpgrade(false);\n      if (user.balance >= price) {\n        await updateDoc(doc(db, \"users\", user.uid), {\n          balance: newBalance,\n          mineRate: nextRate\n        });\n      }\n    } catch (error) {\n      console.error(\"Error upgrading mine rate:\", error);\n      dispatch(setShowMessage({\n        message: \"Error. Please try again!\",\n        color: \"red\"\n      }));\n    }\n  };\n  const addPrecise = (a, b) => {\n    return parseFloat((a + b).toFixed(3));\n  };\n  const formatNumer = num => {\n    let numStr = num.toFixed(3);\n    let [intPart, decPart] = numStr.split(\".\");\n    intPart = intPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    if (num < 0.01) {\n      return `${intPart},${decPart}`;\n    }\n    decPart = decPart.slice(0, 2);\n    return `${intPart},${decPart}`;\n  };\n  const getUpgradeStep = rate => {\n    if (rate < 0.01) return 0.001;\n    if (rate < 0.1) return 0.01;\n    if (rate < 1) return 0.1;\n    return Math.pow(10, Math.floor(Math.log10(rate)));\n  };\n  const getUpgradePrice = nextRate => {\n    return nextRate * 100000;\n  };\n  const getNextUpgradeRate = () => {\n    const step = getUpgradeStep(user.mineRate);\n    return Math.min(addPrecise(user.mineRate, step), MAX_MINE_RATE);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-full mx-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute -top-12 left-0 text-white text-lg bg-gray-800 p-2 rounded\",\n      children: [\"Balance: \\uD83C\\uDF3F\", formatNumer(user.balance)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), !showUpgrade && !user.isMining && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowUpgrade(true),\n      className: `absolute -top-3 right-0 text-xs text-black font-bold py-1 px-2 rounded ${calculate.canUgrade ? \"bg-green-600 hover:bg-green-700\" : \"bg-gray-400 cursor-not-allowed\"}`,\n      disabled: !calculate.canUgrade,\n      children: user.mineRate < MAX_MINE_RATE ? \"Upgrade\" : \"Max Upgrade\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this), showUpgrade && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute -bottom-[130px] left-0 w-full bg-gray-900 p-4 rounded-lg transform transition-all duration-300 ease-in-out\",\n      style: {\n        transform: \"translateY(-100%)\"\n      },\n      children: [user.mineRate < MAX_MINE_RATE ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white mb-2 -mt-2 text-center\",\n          children: [\"Upgrade to \", formatNumer(getNextUpgradeRate()), \" \\uD83C\\uDF3F/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: upgradeMinerate,\n          className: \"w-full bg-yellow-500 hover:bg-yellow-600 text-black font-bold py-2 px-4 rounded\",\n          children: [\"Cost: \\uD83C\\uDF3F\", formatNumer(getUpgradePrice(getNextUpgradeRate()))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-white text-center font-bold py-2\",\n        children: \"Maximum upgrade reached!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowUpgrade(false),\n        className: \"w-full mt-2 bg-red-500 hover:bg-red-600 text-white font-boldpy-2 px-4 rounded\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-800 p-4 rounded-lg w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-white text-lg\",\n          children: user.isMining && \"Activated\" || \"Deactivated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-white\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm\",\n            children: [formatNumer(user.mineRate), \" \\uD83C\\uDF3F/s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-700 h-2 rounded-full mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-500 h-full rounded-full transition-all duration-1000 ease-linear\",\n          style: {\n            width: `${calculate.progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-white text-2xl font-bold\",\n          children: [\"\\uD83C\\uDF3F \", formatNumer(calculate.mined)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-white\",\n          children: [String(calculate.remainingTime.hours).padStart(2, \"0\"), \"h\", \" \", String(calculate.remainingTime.minutes).padStart(2, \"0\"), \"m\", \" \", String(calculate.remainingTime.seconds).padStart(2, \"0\"), \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n};\n_s(MiningButton, \"KA+13RVR2ZTk7SIc63Ngbj+Z9KI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = MiningButton;\nexport default MiningButton;\nvar _c;\n$RefreshReg$(_c, \"MiningButton\");","map":{"version":3,"names":["React","useState","selectUser","useDispatch","useSelector","doc","getDoc","serverTimestamp","setDoc","updateDoc","db","selectCalculated","setShowMessage","selectCoinShow","setCoinShow","jsxDEV","_jsxDEV","MiningButton","_s","dispatch","user","calculate","showUpgrade","setShowUpgrade","claimDisabled","setClaimDisabled","MAX_MINE_RATE","calculateMinedValue","miningStartedTime","mineRate","now","Date","totalMiningTime","elapsedTime","Math","round","minedValue","startFarming","message","color","uid","isMining","error","console","log","claimRewards","getServerTime","userId","time","checkTime","_docSnap$data","docSnap","serverTime","data","Promise","resolve","setTimeout","serverNow","timeDifference","toMillis","minedAmount","newBalance","Number","balance","toFixed","referredBy","referralBonus","referrerDoc","referrerSnapshot","exists","referrerBalance","referralAddedValue","referrals","addedValue","updatedBalance","updatedAddedValue","merge","upgradeMinerate","nextRate","min","addPrecise","getUpgradeStep","price","getUpgradePrice","getNextUpgradeRate","a","b","parseFloat","formatNumer","num","numStr","intPart","decPart","split","replace","slice","rate","pow","floor","log10","step","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","canUgrade","disabled","style","transform","width","progress","mined","String","remainingTime","hours","padStart","minutes","seconds","_c","$RefreshReg$"],"sources":["C:/Users/Samsung/OneDrive/Desktop/Mariano Crop Farm Frontend/marianocropfarmbot/src/components/MiningButton.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  doc,\r\n  getDoc,\r\n  serverTimestamp,\r\n  setDoc,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\nimport { db } from '../firebase';\r\nimport { selectCalculated } from \"../features/calculateSlice\";\r\nimport { setShowMessage } from \"../features/messageSlice\";\r\nimport { selectCoinShow, setCoinShow } from \"../features/coinShowSice\";\r\n\r\nconst MiningButton = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector(selectUser);\r\n  const calculate = useSelector(selectCalculated);\r\n\r\n  const [showUpgrade, setShowUpgrade] = useState(false);\r\n  const [claimDisabled, setClaimDisabled] = useState(false);\r\n\r\n  const MAX_MINE_RATE = 100.0;\r\n\r\n  const calculateMinedValue = (miningStartedTime, mineRate) => {\r\n    if (!miningStartedTime || !mineRate) return 0;\r\n\r\n    const now = Date.now();\r\n    const totalMiningTime = 6 * 60 * 60 * 1000;\r\n    let elapsedTime = now - miningStartedTime;\r\n\r\n    elapsedTime = Math.round(elapsedTime / 1000) * 1000;\r\n\r\n    if (elapsedTime >= totalMiningTime) {\r\n      // Mining completed, return possible minned value\r\n      return mineRate * (totalMiningTime / 1000);\r\n    }\r\n\r\n    // calculate mined value based on elapsed time\r\n    const minedValue = mineRate * (elapsedTime /1000);\r\n\r\n    // Ronded to 3 decimal places to avoid floating point issues\r\n    return Math.round(minedValue * 1000) / 1000;\r\n  };\r\n\r\n  const startFarming = async () => {\r\n    try {\r\n      dispatch(\r\n        setShowMessage({\r\n          message: \"Mining is starting...\",\r\n          color: 'green',\r\n        })\r\n      );\r\n      await updateDoc(doc(db, \"users\", user.uid), {\r\n        isMining: true,\r\n        miningStartedTime: serverTimestamp(),\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error starting farming:\", error);\r\n      dispatch(\r\n        setShowMessage({\r\n          message: \"Error. Please try again\",\r\n          color: 'red',\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const claimRewards = async () => {\r\n    try {\r\n      dispatch(\r\n        setShowMessage({\r\n          message: \"Claiming coins in progress...\",\r\n          color: \"yellow\",\r\n        })\r\n      );\r\n      setClaimDisabled(true);\r\n      // Get the current server times\r\n      const getServerTime = async (db, userId) => {\r\n        await updateDoc(doc(db, 'users', userId), {\r\n          time: serverTimestamp(),\r\n        });\r\n\r\n        const checkTime = async () => {\r\n          const docSnap = await getDoc(doc(db, 'users', userId));\r\n          const serverTime = docSnap.data()?.time;\r\n\r\n          if (serverTime) {\r\n            return serverTime;\r\n          } else {\r\n            return new Promise((resolve) => {\r\n              setTimeout(() => resolve(checkTime()), 1000);\r\n            });\r\n          }\r\n        };\r\n        return checkTime();\r\n      };\r\n\r\n      // Usage\r\n      const serverNow = await getServerTime(db, user.uid);\r\n\r\n      // calculate the time different in miliseconds\r\n      const timeDifference = serverNow.toMillis() - user.miningStartedTime;\r\n\r\n      //check if 6 hr (21600000 miliseconds) have passed\r\n      if (timeDifference >= 21600000) {\r\n        dispatch(selectCoinShow(true));\r\n\r\n        const minedAmount = calculateMinedValue(\r\n          user.miningStartedTime,\r\n          user.mineRate,\r\n          serverNow\r\n        );\r\n        console.log(\"Mined Amount:\", minedAmount);\r\n\r\n        const newBalance = Number((user.balance + minedAmount).toFixed(2));\r\n\r\n        await updateDoc(doc(db, \"users\", user.uid), {\r\n          balance: newBalance,\r\n          isMining: false,\r\n          miningStartedTime: null,\r\n        });\r\n        \r\n        if (user.referredBy) {\r\n          const referralBonus = Number((minedAmount * 0.1).toFixed(2));\r\n          const referrerDoc = doc(db, \"users\", user.referredBy);\r\n          const referrerSnapshot = await getDoc(referrerDoc);\r\n\r\n          if (referrerSnapshot.exists()) {\r\n            const referrerBalance = referrerSnapshot.data().balance;\r\n            const referralAddedValue = referrerSnapshot.data().referrals[user.uid].addedValue;\r\n            const updatedBalance = Number(\r\n              (referrerBalance + referralBonus).toFixed(2)\r\n            );\r\n            const updatedAddedValue = Number(\r\n              (referralAddedValue + referralBonus).toFixed(2)\r\n            );\r\n\r\n            await setDoc(\r\n              referrerDoc,\r\n              {\r\n                referrals:{\r\n                  [user.uid]: {\r\n                    addedValue: updatedAddedValue,\r\n                  },\r\n                },\r\n                balance: updatedBalance,\r\n              },\r\n              { merge: true }\r\n            );\r\n          }\r\n        }\r\n        setClaimDisabled(false);\r\n      } else {\r\n        console.log(\"Not enough time has passed to claim reward\");\r\n        //optionally, you can show message \r\n        dispatch(\r\n          setShowMessage({\r\n            message: \"Error. Please try again!\",\r\n            color: \"red\",\r\n          })\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error claiming reward:\", error);\r\n      dispatch(\r\n        setShowMessage({\r\n          message: \"Error. Please try again!\",\r\n          color: \"red\",\r\n        })\r\n      );\r\n      dispatch(setCoinShow(false));\r\n      setClaimDisabled(false);\r\n    }\r\n  };\r\n\r\n  const upgradeMinerate = async () => {\r\n    try {\r\n      dispatch(\r\n        setShowMessage({\r\n          message: \"Upgrading in progress...\",\r\n          color: \"blue\",\r\n        })\r\n      );\r\n\r\n      const nextRate = Math.min(\r\n        addPrecise(user.mineRate, getUpgradeStep(user.mineRate)),\r\n        MAX_MINE_RATE\r\n      );\r\n      const price = getUpgradePrice(getNextUpgradeRate());\r\n      const newBalance = Number((user.balance - price).toFixed(2));\r\n\r\n      setShowUpgrade(false);\r\n\r\n      if (user.balance >= price) {\r\n        await updateDoc(doc(db, \"users\", user.uid), {\r\n          balance: newBalance,\r\n          mineRate: nextRate,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error upgrading mine rate:\", error);\r\n      dispatch(\r\n        setShowMessage({\r\n          message: \"Error. Please try again!\",\r\n          color: \"red\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const addPrecise = (a, b) => {\r\n    return parseFloat((a + b).toFixed(3));\r\n  };\r\n\r\n  const formatNumer = (num) => {\r\n    let numStr = num.toFixed(3);\r\n\r\n    let [intPart, decPart] = numStr.split(\".\");\r\n\r\n    intPart = intPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n\r\n    if (num < 0.01) {\r\n      return `${intPart},${decPart}`;\r\n    }\r\n\r\n    decPart = decPart.slice(0, 2);\r\n\r\n    return `${intPart},${decPart}`;\r\n  }\r\n\r\n  const getUpgradeStep = (rate) => {\r\n    if (rate < 0.01) return 0.001;\r\n    if (rate < 0.1) return 0.01;\r\n    if (rate < 1) return 0.1;\r\n    return Math.pow(10, Math.floor(Math.log10(rate)));\r\n  };\r\n\r\n  const getUpgradePrice = (nextRate) => {\r\n    return nextRate * 100000;\r\n  };\r\n\r\n  const getNextUpgradeRate = () => {\r\n    const step = getUpgradeStep(user.mineRate);\r\n    return Math.min(addPrecise(user.mineRate, step), MAX_MINE_RATE);\r\n  };\r\n\r\n  return (\r\n    <div className='relative w-full mx-4'>\r\n      <div className='absolute -top-12 left-0 text-white text-lg bg-gray-800 p-2 rounded'>\r\n        Balance: 🌿{formatNumer(user.balance)}\r\n      </div>\r\n\r\n      {!showUpgrade && !user.isMining && (\r\n        <button\r\n          onClick={() => setShowUpgrade(true)}\r\n          className={`absolute -top-3 right-0 text-xs text-black font-bold py-1 px-2 rounded ${\r\n            calculate.canUgrade\r\n              ? \"bg-green-600 hover:bg-green-700\"\r\n              : \"bg-gray-400 cursor-not-allowed\"\r\n          }`}\r\n          disabled={!calculate.canUgrade}>\r\n            {user.mineRate < MAX_MINE_RATE ? \"Upgrade\" : \"Max Upgrade\"}\r\n        </button>\r\n      )}\r\n\r\n      {showUpgrade && (\r\n        <div className='absolute -bottom-[130px] left-0 w-full bg-gray-900 p-4 rounded-lg transform transition-all duration-300 ease-in-out'\r\n          style={{ transform: \"translateY(-100%)\"}}\r\n        >\r\n          {user.mineRate < MAX_MINE_RATE ? (\r\n            <div>\r\n              <p className='text-white mb-2 -mt-2 text-center'>\r\n                Upgrade to {formatNumer(getNextUpgradeRate())} 🌿/s\r\n              </p>\r\n              <button onClick={upgradeMinerate} className='w-full bg-yellow-500 hover:bg-yellow-600 text-black font-bold py-2 px-4 rounded'\r\n            >\r\n              Cost: 🌿{formatNumer(getUpgradePrice(getNextUpgradeRate()))}\r\n            </button>\r\n          </div>\r\n          ) : (\r\n            <div className=\"text-white text-center font-bold py-2\">\r\n              Maximum upgrade reached!\r\n            </div>\r\n          )}\r\n          <button \r\n            onClick={() => setShowUpgrade(false)} className='w-full mt-2 bg-red-500 hover:bg-red-600 text-white font-boldpy-2 px-4 rounded'  \r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <div className='bg-gray-800 p-4 rounded-lg w-full'>\r\n        <div className='flex justify-between items-center mb-2'>\r\n          <span className='text-white text-lg'>\r\n            {(user.isMining && \"Activated\") || \"Deactivated\"}\r\n          </span>\r\n          <div className='text-white'>\r\n            <span className='text-sm'>{formatNumer(user.mineRate)} 🌿/s</span>\r\n          </div>\r\n        </div>\r\n        <div className='bg-gray-700 h-2 rounded-full mb-2'>\r\n          <div className='bg-blue-500 h-full rounded-full transition-all duration-1000 ease-linear' style={{\r\n            width: `${calculate.progress}%`\r\n          }}></div>\r\n        </div>\r\n\r\n        <div className='flex justify-between items-center mb-4'>\r\n          <span className='text-white text-2xl font-bold'>\r\n          🌿 {formatNumer(calculate.mined)}\r\n          </span>\r\n          <span className='text-white'>\r\n            {String(calculate.remainingTime.hours).padStart(2, \"0\")}h{\" \"}\r\n            {String(calculate.remainingTime.minutes).padStart(2, \"0\")}m{\" \"}\r\n            {String(calculate.remainingTime.seconds).padStart(2, \"0\")}s\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MiningButton"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}